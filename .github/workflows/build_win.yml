name: Build Windows Workflow

on:
  push:
#    branches: master

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'
          architecture: 'x64'
      - name: Install Poetry
        run: |
          pip install poetry
      - name: Install requirements
        run: |
          poetry install 
      - name: Run Nuitka compiler
        run: |
          poetry run nuitka pulse/launch.py
          --onefile
          --disable-console
          --assume-yes-for-downloads
          --file-version=2.0
          --company-name=MOPT
          --product-name=OpenPulse
          --output-filename=OpenPulse.exe
          --enable-plugin=pyqt5
          --windows-icon-from-ico=data/icons/pulse.ico
          --include-data-dir=data/icons/=data/icons/
          --include-data-dir=data/symbols/=data/symbols/
          --include-data-dir=pulse/interface/ui_files/=pulse/interface/ui_files/
          --include-data-dir=pulse/lib/=pulse/lib/
      - uses: actions/upload-artifact@v2
        with:
          name: WindowsOpenPulse
          path: OpenPulse.exe

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.head_commit.message }}
          release_name: ${{ github.event.head_commit.message }}
          overwrite: true
          body: |
            Test Release v1.0.0
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: OpenPulse.exe
          asset_name: OpenPulse-win-x64.exe
          asset_content_type: application/zip